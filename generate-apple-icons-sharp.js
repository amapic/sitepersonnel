const fs = require('fs');
const path = require('path');
const sharp = require('sharp');

// Tailles requises pour les ic√¥nes Apple
const sizes = [
  57, 60, 72, 76, 114, 120, 144, 152, 180
];

// Cr√©er le dossier apple s'il n'existe pas
const appleDir = path.join(__dirname, 'public', 'apple');
if (!fs.existsSync(appleDir)) {
  fs.mkdirSync(appleDir, { recursive: true });
}

// Chemin vers le favicon source
const sourceIcon = path.join(__dirname, 'public', 'favicon.svg');

// V√©rifier si le favicon source existe
if (!fs.existsSync(sourceIcon)) {
  console.error('‚ùå favicon.svg non trouv√© dans le dossier public/');
  process.exit(1);
}

console.log('üöÄ G√©n√©ration des ic√¥nes Apple avec Sharp...');

// Fonction pour g√©n√©rer toutes les tailles
async function generateIcons() {
  try {
    // G√©n√©rer chaque taille
    for (const size of sizes) {
      const outputFile = path.join(appleDir, `apple-touch-icon-${size}x${size}.png`);
      
      await sharp(sourceIcon)
        .resize(size, size)
        .png()
        .toFile(outputFile);
      
      console.log(`‚úÖ ${size}x${size} g√©n√©r√©`);
    }

    // Copier le favicon SVG par d√©faut
    const defaultIcon = path.join(appleDir, 'favicon.svg');
    fs.copyFileSync(sourceIcon, defaultIcon);
    console.log('‚úÖ favicon.svg copi√©');

    console.log('\nüéâ G√©n√©ration termin√©e !');
    console.log('üìÅ Ic√¥nes cr√©√©es dans: public/apple/');
    console.log('\nüìù Mettez √† jour votre HTML avec les nouveaux chemins:');
    console.log('<link rel="apple-touch-icon" href="/apple/favicon.svg">');
    sizes.forEach(size => {
      console.log(`<link rel="apple-touch-icon" sizes="${size}x${size}" href="/apple/apple-touch-icon-${size}x${size}.png">`);
    });

  } catch (error) {
    console.error('‚ùå Erreur lors de la g√©n√©ration:', error.message);
  }
}

// Ex√©cuter la g√©n√©ration
generateIcons(); 